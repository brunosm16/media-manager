services:
  server:
    container_name: media_manager_server
    image: media_manager_server:1.0.0
    depends_on:
      - database
      - redis
    env_file:
      - .env
    networks:
      - media_manager_network
    build:
      context: .
      dockerfile: ./Dockerfile.development
      target: development
    command: npm run start:debug:docker
    volumes:
      - .:/usr/src/app
      - uploaded_medias:/usr/src/app/upload
      - /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - ${DEBUG_PORT}:${DEBUG_PORT}
  database:
    container_name: ${DATABASE_HOST}
    image: postgres:16.1
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    networks:
      - media_manager_network
    volumes:
      - database_data:/var/lib/postgresql/data
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
  redis:
    container_name: media_manager_redis
    image: redis:7.2.4
    networks:
      - media_manager_network

networks:
  media_manager_network:
    driver: bridge
volumes:
  uploaded_medias: {}
  database_data: {}
